#
# Winding is always CCW. DEVIATION SHOULD BE CONSIDERED A BUG!!11
#
# 3d primitive arguments:

# material(dr, dg, db, sr, sg, sb, shininess, er, eg, eb)
#   diffuse rgb, specular rgb, shininess, emissive rgb
# material(0-3)
#   set material from params->pColor[4]
# material(animfn=xxx,
# 	material(dr,dg,db,sr,sg,sb,shininess, er,eg,eb),
# 	material(dr,dg,db,sr,sg,sb,shininess, er,eg,eb))
#   animate material between first and second using anim function
#
# triangle(vector v1, vector v2, vector v3)
#
# quad(vector v1, vector v2, vector v3, vector v4)
#
# circle(int circumference_steps, vector center, vector normal, vector up, radius=float radius)
#   eg: circle(8, some_vector, v(0,0,1), v(0,1,0), radius=10.0)
#
#   vector up - points from the centre of the circle to the circumference, in
#               any direction
#
# cylinder(int steps, vector start, vector end, vector up, radius=float radius)
#   eg: cylinder(8, v(15,10,0), v(15,20,0), v(0,0,1), radius=10.0)
#
# tube(int steps, vector start, vector end, vector up, innerrad=float, outerrad=float)
#   eg: tube(8, poohat1, poohat2, v(0,0,1), innerrad=5.0, outerrad=10.0)
#
# extrusion(vector start, vector end, vector up, radius=float, {v1, v2, v3, ... })
#   eg: extrusion(v(0,0,-10), v(0,0,0), v(0,1,0), radius=1.0, {v(10,10,0), v(15,0,0), v(10,-10,0), v(-10,-10,0), v(-10,10,0)})
# 
#   v1,v2,v3,... describes the 2d shape to be extruded into 3d along start->end.
#   it should be wound counter-clockwise in x,y, with the z coordinate ignored
#   up is a normal, and should be perpendicular to end-start
#
# smooth(int steps, vector start,
#         ... then two to four of:
#         hermite(vector pos, vector tan0, vector tan1)
#         hermite_norm(vector pos1, vector norm0, vector norm1)
#         line(vector pos)
# )
#   makes lovely smooth surface
#
# text(global:textnum, vector pos, vector norm, vector xaxis, [xoff=, yoff=, scale=, animfn=])
# text(params:textnum, vector pos, vector norm, vector xaxis, [xoff=, yoff=, scale=, animfn=])
#   draws text from either the global strings array or the params strings
#   * if animfn used, only drawn if animfn's src parameter is != 0.0
#
# subobject(object_name, vector pos, vector normal, vector zaxis [, scale=float, animfn=])
#   eg:subobject(hermite_wank, v(0,0,0), v(0,1,0), v(0,0,1), scale=1.0)
#   * if animfn used, only drawn if animfn's src parameter is != 0.0
#
# thruster(direction, vector position, float size)
#   eg: xref:notangular:thruster(fwd, v(10,0,0), 30.0)
#
#   notangular flag indicates that this thruster should not be used to display
#   angular acceleration.
#   'direction' is fwd, rev, up, down, left, right
#
# Simple vertex definition:
#   v(x,y,z) = plain vertex
#   n(x,y,z) = normalized
# Complex (composed of other vertices & maybe anim):
#   vnormal(v1, v2, v3) = n((v2-v1)^(v0-v1)) -- normal to angle v1-v2-v3
#   vcross(v1,v2) = v1^v2
#   vlinear(animfn=xxx, v1, v2)
#   vcubic(animfn=xxx, v1,v2,v3,v4)
#   vhermite(animfn=xxx, v1,v2,n1,n2) = hermite from v1 to v2, normals n1,n2
#   vrotate(animfn=xxx, xaxis, zaxis)
#
# animfn is of gear, gflap, thrustpulse, lin4sec (see anim_fns[], enum animfunc)

model(hermite_wank) {
	all {
		# 1/8th sphere
		v6 = v(0.0, 5.0, 0.0)
		v7 = v(-5.0, 0.0, 0.0 )
		v8 = v(0.0, 0.0, 5.0 )

		v9 = v(-7.0, 0.0, 0.0 )			
		v10 = v(0.0, 7.0, 0.0 )
		v11 = v(0.0, 0.0, 7.0 )			
		material(.2,.0,.2, 1,0,1, 10, 0,0,0)
		xref:smooth(8, v6,
			hermite(v7, v9, v10),
			hermite(v8, v11, v9),
			hermite(v6, v10, v11))

		material(1, 0, 1, 0, 0, 0, 1, 0, 0, 0)
		extrusion(v(0,0,0), v(0,0,10), n(0,-1,0), radius=1.0,
			{
				v(-3.0, 0.0, 0),
				v(-2.0, -2.0, 0),
				v(2.0, -2.0, 0),			
				v(6.0, 0.0, 0),			
				v(2.0, 2.0, 0),
				v(-2.0, 2.0, 0)
			})
		xref:notangular:thruster(fwd, v(10,0,0), 30.0)
		xref:thruster(rev, v(10,0,0), 10.0)
		xref:thruster(up, v(10,0,0), 20.0)
		xref:thruster(down, v(10,0,0), 20.0)
		thruster(left, v(0,0,0), 20.0)
		thruster(right, v(0,0,0), 20.0)

	}
}

model(junk, scale=1.5, radius=1.0) {
	all {
		subobject(hermite_wank, v(0,0,0), v(0,1,0), v(0,0,1), scale=1.0)
		subobject(hermite_wank, v(0,0,0), v(0,-1,0), v(0,0,1), scale=1.0, animfn=gear)
	}
	lod 5 {
		xref:tube(8, v(15,-20,0), vlinear(animfn=gear, v(15,-15,0), v(15,-10,0)), v(0,0,1), innerrad=5.0, outerrad=10.0)
		geomflag(10)
		quad(v(1,-2,0), v(1,-1,0), v(0,-1,0), v(0,-2,0))
		circle(8, v(15,0,0), v(0,0,1), v(0,1,0), radius=10.0)
		xref:cylinder(8, v(15,10,0), v(15,20,0), v(0,0,1), radius=10.0)
	}
	lod full {
		xref:tube(16, v(15,-20,0), vlinear(animfn=gear, v(15,-15,0), v(15,-10,0)), v(0,0,1), innerrad=5.0, outerrad=10.0)
		quad(v(1,-2,0), v(1,-1,0), v(0,-1,0), v(0,-2,0))
		circle(16, v(15,0,0), v(0,0,1), v(0,1,0), radius=10.0)
		xref:cylinder(16, v(15,10,0), v(15,20,0), v(0,0,1), radius=10.0)
	}
}

model(cargo, scale=1.0, radius=2.0) {
	lod 10.0 {
		cylinder(6, v(0,1,0), v(0,-1,0), v(1,0,0), radius=1.0)
	}
	lod 20.0 {
		cylinder(8, v(0,1,0), v(0,-1,0), v(1,0,0), radius=1.0)
	}
	lod full {
		material(0)
		tube(16, v(0,1,0), v(0,-1,0), v(1,0,0), innerrad=0.9, outerrad=1.0)
		cylinder(16, v(0,0.8,0), v(0,-0.8,0), v(1,0,0), radius=0.9)
		material(animfn=gear,
			material(1,0,0, 0,0,0, 0, 0,0,0),
			material(0,0,1, 0,0,0, 0, 0,0,0))
		zbias(v(0,0.8,0), v(0,1,0))
		textpos = vhermite(animfn=gear, v(-10,-10,0),v(10,10,0), v(0,50,0),v(0,-50,0))
		text(params:0, textpos, v(0,1,0), v(1,0,0), scale=1, animfn=gear)
	}
}

model(hermite_wank, scale=20) {
	all {
		smooth(16, v(0,0,0),
			line(v(1,0,0)),
			hermite_norm(v(1,1,1), v(0,0,1), v(0,-1,0)),
			line(v(0,1,1)),
			hermite_norm(v(0,0,0), v(0,-1,0), v(0,0,1)))
		smooth(16, v(0,0,0),
			hermite(v(0,-1,1), v(0,-1,0), v(0,0,-1)),
			line(v(1,-1,1)),
			hermite(v(1,0,0), v(0,0,-1), v(0,-1,0)),
			line(v(0,0,0)))
	}
}

