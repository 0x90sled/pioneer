define_model('rotor', {
	info = {	
			lod_pixels = {20, 50, 100, 0},
			scale=1,
			bounding_radius = 3,
		},
	static = function(lod)

	circle(4*lod, v(0,0,0), v(0,1,0), v(0,0,1),.3)
	xref_tri(v(0,0,0), v(1.3,0,.25), v(1.3,0,-.25)) 
	tri(v(0,0,0), v(-.25,0,1.3), v(.25,0,1.3))
	tri(v(0,0,0), v(.25,0,-1.3), v(-.25,0,-1.3))
	xref_tri(v(0,0,0), v(-1.1,0,.7), v(-.7,0,1.1))
	xref_tri(v(0,0,0), v(1.1,0,-.7), v(.7,0,-1.1))



end
})

factor = 0

define_model('factory1', {
	info = {
		lod_pixels = {20, 50, 100, 0},
		scale=1.25, 
		bounding_radius = 60,
		materials = {'clay', 'concrete', 'blood', 'snow', 'coal', 'steel', 'nausea', 'sea', 'dandelion', 'kentucky'},
		tags = {'city_building'}
	},

	static = function(lod)

	set_material('clay', .1, 0, -.4, 1, .3, .3, .3, 1)
	set_material('concrete', .2, .2, .1, 1, .3, .3, .3, 1)
	set_material('blood', .1, -.2, -.2, 1, .3, .3, .3, 1)
	set_material('snow', .6, .6, .6, 1, .3, .3, .3, 1)
	set_material('coal', -.2, -.2, -.2, 1, .3, .3, .3, 1)
	set_material('steel', .6, .65, .7, 1, .85, .9, 1, 10)
	set_material('nausea', .2, .4, .1, 1, .3, .3, .3, 1)
	set_material('sea', -1, -.1, .1, 1, .3, .3, .3, 1)
	set_material('dandelion', .3, .25, -1, 1, .3, .3, .3, 1)
	set_material('kentucky', .2, .25, .3, 1, .85, .9, 1, 100)

	use_material('clay')
	extrusion(v(-20,0,0), v(20,0,0), v(0,1,0), 1.0, v(-20,0,0), v(20,0,0), v(20,20,0), v(-20,20,0))
	quad(v(-20,20,0), v(20,20,0), v(20,28,0), v(-20,28,0))
	quad(v(-20,28,0), v(20,28,0), v(18,30,-2), v(-18,30,-2))
	quad(v(20,20,-20), v(-20,20,-20), v(-20,28,-20), v(20,28,-20))
	quad(v(20,28,-20), v(-20,28,-20), v(-18,30,-18), v(18,30,-18))
	xref_quad(v(-20,20,-20), v(-20,20,0), v(-20,28,0), v(-20,28,-20))
	xref_quad(v(-20,28,-20), v(-20,28,0), v(-18,30,-2), v(-18,30,-18))
	quad(v(-18,30,-2), v(18,30,-2), v(18,30,-18), v(-18,30,-18))

	use_material('concrete')
	xref_tapered_cylinder(4*lod, v(12,30,-10), v(12,46,-10), v(0,0,1), 2.0, 1.36)
	tapered_cylinder(4*lod, v(0,30,-10), v(0,46,-10), v(0,0,1), 2.0, 1.36)
	extrusion(v(-17.5,0,0), v(-13.5,0,0), v(0,1,0), 1, v(-22,0,0), v(-20,0,0), v(-20,2.5,0), v(-22,2.5,0))
	extrusion(v(-26,0,0), v(-20,0,0), v(0,1,0), 1, v(-20,0,0), v(0,0,0), v(10,0,0), v(-20,4,0))

	xref_tube(4*lod, v(12,49,-10), v(12,50,-10), v(0,0,1), .94, 1.24)
	tube(4*lod, v(0,49,-10), v(0,50,-10), v(0,0,1), .94, 1.24)

	use_material('blood')
	xref_tapered_cylinder(4*lod, v(12,46,-10), v(12,47,-10), v(0,0,1), 1.36, 1.32)
	tapered_cylinder(4*lod, v(0,46,-10), v(0,47,-10), v(0,0,1), 1.36, 1.32)

	xref_tapered_cylinder(4*lod, v(12,48,-10), v(12,49,-10), v(0,0,1), 1.28, 1.24)
	tapered_cylinder(4*lod, v(0,48,-10), v(0,49,-10), v(0,0,1), 1.28, 1.24)

	use_material('snow')
	xref_tapered_cylinder(4*lod, v(12,47,-10), v(12,48,-10), v(0,0,1), 1.32, 1.28)
	tapered_cylinder(4*lod, v(0,47,-10), v(0,48,-10), v(0,0,1), 1.32, 1.28)

	use_material('coal')
	xref_circle(4*lod, v(12,49.01,-10), v(0,1,0), v(0,0,1), 1.19)
	circle(4*lod, v(0,49.01,-10), v(0,1,0), v(0,0,1), 1.19)
	xref_circle(4*lod, v(11,21.01,12), v(0,1,0), v(0,0,1), 1.5)
	quad(v(30,0,-23), v(-26,0,-23), v(-26,0,30), v(30,0,30))
	quad(v(-25.5,0,20.01), v(-20.5,0,20.01), v(-20.5,3,20.01), v(-25.5,3,20.01))	

	use_material('steel')
	extrusion(v(0,0,0), v(0,0,10), v(0,1,0), 1, v(-12,20,0), v(-10,20,0), v(-10,21,0), v(-12,21,0))
	extrusion(v(0,0,0), v(0,0,10), v(0,1,0), 1, v(10,20,0), v(12,20,0), v(12,21,0), v(10,21,0))
	extrusion(v(0,0,10), v(0,0,14), v(0,1,0), 1, v(-13,20,0), v(-9,20,0), v(-9,21,0), v(-13,21,0))
	extrusion(v(0,0,10), v(0,0,14), v(0,1,0), 1, v(9,20,0), v(13,20,0), v(13,21,0), v(9,21,0))
	
	xref_ring(4*lod, v(12,0,-21), v(12,20,-21), v(0,0,1), 1)
	xref_ring(4*lod, v(12,20,-21), v(12,22,-19), v(0,0,1), 1)
	ring(4*lod, v(0,0,-21), v(0,20,-21), v(0,0,1), 1)
	ring(4*lod, v(0,20,-21), v(0,22,-19), v(0,0,1), 1)

	ring(4*lod, v(25,13,14), v(23,15,14), v(0,1,0), 1)
	ring(4*lod, v(20,15,14), v(23,15,14), v(0,0,1), 1)
	ring(4*lod, v(25,13,4), v(23,15,4), v(0,1,0), 1)
	ring(4*lod, v(20,15,4), v(23,15,4), v(0,0,1), 1)



	use_material('nausea')
	cylinder(6*lod, v(24,0,14), v(24,14,14), v(0,0,1), 4)
	cylinder(6*lod, v(24,0,4), v(24,14,4), v(0,0,1), 4)

	use_material('sea')
	quad(v(-11,16,20.01), v(11,16,20.01), v(11,19.6,20.01), v(-11,19.6,20.01))
	text('division', v(0,14.5,20.01), v(0,0,1), v(1,0,0), 1.5, {center=true})	

	use_material('dandelion')
	text('ACME Bolts & Nuts', v(0,18,20.02), v(0,0,1), v(1,0,0), 2, {center=true})

	use_material('kentucky')
	quad(v(-17,0,22.01), v(-14,0,22.01), v(-14,2,22.01), v(-17,2,22.01))
	xref_quad(v(-11.5,.7,20.01), v(-8.5,.7,20.01), v(-8.5,2,20.01), v(-11.5,2,20.01))
	xref_quad(v(-7.5,.7,20.01), v(-4.5,.7,20.01), v(-4.5,2,20.01), v(-7.5,2,20.01))
	xref_quad(v(-3.5,.7,20.01), v(-.5,.7,20.01), v(-.5,2,20.01), v(-3.5,2,20.01))
	quad(v(12.5,.7,20.01), v(15.5,.7,20.01), v(15.5,2,20.01), v(12.5,2,20.01))
	quad(v(16.5,.7,20.01), v(19.5,.7,20.01), v(19.5,2,20.01), v(16.5,2,20.01))
	xref_quad(v(-19.5,3,20.01), v(-16.5,3,20.01), v(-16.5,4.3,20.01), v(-19.5,4.3,20.01))
	xref_quad(v(-15.5,3,20.01), v(-12.5,3,20.01), v(-12.5,4.3,20.01), v(-15.5,4.3,20.01))
	xref_quad(v(-11.5,3,20.01), v(-8.5,3,20.01), v(-8.5,4.3,20.01), v(-11.5,4.3,20.01))
	xref_quad(v(-7.5,3,20.01), v(-4.5,3,20.01), v(-4.5,4.3,20.01), v(-7.5,4.3,20.01))
	xref_quad(v(-3.5,3,20.01), v(-.5,3,20.01), v(-.5,4.3,20.01), v(-3.5,4.3,20.01))
	xref_quad(v(-19.5,5.3,20.01), v(-16.5,5.3,20.01), v(-16.5,6.6,20.01), v(-19.5,6.6,20.01))
	xref_quad(v(-15.5,5.3,20.01), v(-12.5,5.3,20.01), v(-12.5,6.6,20.01), v(-15.5,6.6,20.01))
	xref_quad(v(-11.5,5.3,20.01), v(-8.5,5.3,20.01), v(-8.5,6.6,20.01), v(-11.5,6.6,20.01))
	xref_quad(v(-7.5,5.3,20.01), v(-4.5,5.3,20.01), v(-4.5,6.6,20.01), v(-7.5,6.6,20.01))
	xref_quad(v(-3.5,5.3,20.01), v(-.5,5.3,20.01), v(-.5,6.6,20.01), v(-3.5,6.6,20.01))
	xref_quad(v(-19.5,7.6,20.01), v(-16.5,7.6,20.01), v(-16.5,8.9,20.01), v(-19.5,8.9,20.01))
	xref_quad(v(-15.5,7.6,20.01), v(-12.5,7.6,20.01), v(-12.5,8.9,20.01), v(-15.5,8.9,20.01))
	xref_quad(v(-11.5,7.6,20.01), v(-8.5,7.6,20.01), v(-8.5,8.9,20.01), v(-11.5,8.9,20.01))
	xref_quad(v(-7.5,7.6,20.01), v(-4.5,7.6,20.01), v(-4.5,8.9,20.01), v(-7.5,8.9,20.01))
	xref_quad(v(-3.5,7.6,20.01), v(-.5,7.6,20.01), v(-.5,8.9,20.01), v(-3.5,8.9,20.01))
	xref_quad(v(-20.01,.7,-9), v(-20.01,.7,-6), v(-20.01,2,-6), v(-20.01,2,-9))
	xref_quad(v(-20.01,.7,-13), v(-20.01,.7,-10), v(-20.01,2,-10), v(-20.01,2,-13))
	xref_quad(v(-20.01,3,-9), v(-20.01,3,-6), v(-20.01,4.3,-6), v(-20.01,4.3,-9))
	xref_quad(v(-20.01,3,-13), v(-20.01,3,-10), v(-20.01,4.3,-10), v(-20.01,4.3,-13))
	xref_quad(v(-20.01,5.3,-9), v(-20.01,5.3,-6), v(-20.01,6.6,-6), v(-20.01,6.6,-9))
	xref_quad(v(-20.01,5.3,-13), v(-20.01,5.3,-10), v(-20.01,6.6,-10), v(-20.01,6.6,-13))
	xref_quad(v(-20.01,7.6,-9), v(-20.01,7.6,-6), v(-20.01,8.9,-6), v(-20.01,8.9,-9))
	xref_quad(v(-20.01,7.6,-13), v(-20.01,7.6,-10), v(-20.01,8.9,-10), v(-20.01,8.9,-13))
	xref_quad(v(-20.01,9.9,-9), v(-20.01,9.9,-6), v(-20.01,11.2,-6), v(-20.01,11.2,-9))
	xref_quad(v(-20.01,9.9,-13), v(-20.01,9.9,-10), v(-20.01,11.2,-10), v(-20.01,11.2,-13))
	xref_quad(v(-20.01,12.2,-9), v(-20.01,12.2,-6), v(-20.01,13.5,-6), v(-20.01,13.5,-9))
	xref_quad(v(-20.01,12.2,-13), v(-20.01,12.2,-10), v(-20.01,13.5,-10), v(-20.01,13.5,-13))
	xref_quad(v(-20.01,14.5,-9), v(-20.01,14.5,-6), v(-20.01,15.8,-6), v(-20.01,15.8,-9))
	xref_quad(v(-20.01,14.5,-13), v(-20.01,14.5,-10), v(-20.01,15.8,-10), v(-20.01,15.8,-13))
	xref_quad(v(-20.01,16.8,-9), v(-20.01,16.8,-6), v(-20.01,18.1,-6), v(-20.01,18.1,-9))
	xref_quad(v(-20.01,16.8,-13), v(-20.01,16.8,-10), v(-20.01,18.1,-10), v(-20.01,18.1,-13))
	xref_quad(v(-20.01,19.1,-9), v(-20.01,19.1,-6), v(-20.01,20.4,-6), v(-20.01,20.4,-9))
	xref_quad(v(-20.01,19.1,-13), v(-20.01,19.1,-10), v(-20.01,20.4,-10), v(-20.01,20.4,-13))
	xref_quad(v(-20.01,21.4,-9), v(-20.01,21.4,-6), v(-20.01,22.7,-6), v(-20.01,22.7,-9))
	xref_quad(v(-20.01,21.4,-13), v(-20.01,21.4,-10), v(-20.01,22.7,-10), v(-20.01,22.7,-13))
	xref_quad(v(-20.01,23.7,-9), v(-20.01,23.7,-6), v(-20.01,25,-6), v(-20.01,25,-9))
	xref_quad(v(-20.01,23.7,-13), v(-20.01,23.7,-10), v(-20.01,25,-10), v(-20.01,25,-13))
	quad(v(-20.01,5.3,-5), v(-20.01,5.3,-2), v(-20.01,6.6,-2), v(-20.01,6.6,-5))
	quad(v(-20.01,7.6,-5), v(-20.01,7.6,-2), v(-20.01,8.9,-2), v(-20.01,8.9,-5))
	quad(v(-20.01,5.3,-1), v(-20.01,5.3,2), v(-20.01,6.6,2), v(-20.01,6.6,-1))
	quad(v(-20.01,7.6,-1), v(-20.01,7.6,2), v(-20.01,8.9,2), v(-20.01,8.9,-1))
	quad(v(-20.01,5.3,3), v(-20.01,5.3,6), v(-20.01,6.6,6), v(-20.01,6.6,3))
	quad(v(-20.01,7.6,3), v(-20.01,7.6,6), v(-20.01,8.9,6), v(-20.01,8.9,3))
	quad(v(-20.01,5.3,7), v(-20.01,5.3,10), v(-20.01,6.6,10), v(-20.01,6.6,7))
	quad(v(-20.01,7.6,7), v(-20.01,7.6,10), v(-20.01,8.9,10), v(-20.01,8.9,7))
	quad(v(-20.01,5.3,11), v(-20.01,5.3,14), v(-20.01,6.6,14), v(-20.01,6.6,11))
	quad(v(-20.01,7.6,11), v(-20.01,7.6,14), v(-20.01,8.9,14), v(-20.01,8.9,11))
	quad(v(-20.01,5.3,15), v(-20.01,5.3,18), v(-20.01,6.6,18), v(-20.01,6.6,15))
	quad(v(-20.01,7.6,15), v(-20.01,7.6,18), v(-20.01,8.9,18), v(-20.01,8.9,15))
	quad(v(-0.6,20,.01), v(0.6,20,.01), v(0.6,22,.01), v(-0.6,22,.01))
	
	xref_quad(v(-15.5,23.7,0.01), v(-12.5,23.7,0.01), v(-12.5,25,0.01), v(-15.5,25,0.01))
	xref_quad(v(-11.5,23.7,0.01), v(-8.5,23.7,0.01), v(-8.5,25,0.01), v(-11.5,25,0.01))
	xref_quad(v(-7.5,23.7,0.01), v(-4.5,23.7,0.01), v(-4.5,25,0.01), v(-7.5,25,0.01))
	xref_quad(v(-3.5,23.7,0.01), v(-.5,23.7,0.01), v(-.5,25,0.01), v(-3.5,25,0.01))

end,

dynamic = function(lod)
	
	use_material('steel')
	factor = factor + 0.03
	call_model('rotor', v(11,21.02,12), v(0.9*math.cos(factor),0,0.9*math.sin(factor)), v(0,1,0),1)
	call_model('rotor', v(-11,21.02,12), v(0.9*math.cos(factor),0,0.9*math.sin(factor)), v(0,1,0),1)

local lightphase = math.fmod(get_arg(1), 1)
			if lightphase < .5 then
				billboard('smoke.png', 2, v(1,0,0), { v(13.5,49.5,-10), v(10.5,49.5,-10), v(-13.5,49.5,-10), v(-10.5,49.5,-10), v(1.5,49.5,-10), v(-1.5,49.5,-10) })                      
			elseif lightphase  > .5 then
				billboard('smoke.png', 2,  v(1,0,0), { v(12,49.5,-11.5), v(12,49.5,-8.5), v(-12,49.5,-11.5), v(-12,49.5,-8.5), v(0,49.5,-11.5), v(0,49.5,-8.5) })

			end


end

})
